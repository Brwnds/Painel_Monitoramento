{"remainingRequest":"C:\\Users\\evelyn.targino\\Documents\\painel_monitoramento\\Painel_Monitoramento\\app\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\evelyn.targino\\Documents\\painel_monitoramento\\Painel_Monitoramento\\app\\frontend\\src\\App.vue?vue&type=style&index=0&id=7ba5bd90&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\evelyn.targino\\Documents\\painel_monitoramento\\Painel_Monitoramento\\app\\frontend\\src\\App.vue","mtime":1726767256352},{"path":"C:\\Users\\evelyn.targino\\Documents\\painel_monitoramento\\Painel_Monitoramento\\app\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1726757151779},{"path":"C:\\Users\\evelyn.targino\\Documents\\painel_monitoramento\\Painel_Monitoramento\\app\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1726757160104},{"path":"C:\\Users\\evelyn.targino\\Documents\\painel_monitoramento\\Painel_Monitoramento\\app\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1726757157329},{"path":"C:\\Users\\evelyn.targino\\Documents\\painel_monitoramento\\Painel_Monitoramento\\app\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1726757148766},{"path":"C:\\Users\\evelyn.targino\\Documents\\painel_monitoramento\\Painel_Monitoramento\\app\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1726757160104}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIEVzdGlsb3MuLi4gKHNlbSBhbHRlcmHDp8O1ZXMgbm9zIHNldXMgZXN0aWxvcyBhbnRlcmlvcmVzKSAqLwo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";AAgFA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"panel-monitoring\">\n      <h1>Painel de Monitoramento</h1>\n      <div class=\"grid\">\n        <!-- Exibindo os painéis com status visual -->\n        <div v-for=\"panel in panels\" :key=\"panel.link\" class=\"card\" :class=\"{ offline: panel.status !== 'ativo' }\">\n          {{ panel.painel }}\n          <div class=\"circle\" :class=\"{ blue: panel.status === 'ativo', red: panel.status !== 'ativo' }\">\n            {{ panel.status === 'ativo' ? '✔' : '✖' }}\n          </div>\n        </div>\n      </div>\n      <div class=\"sidebar\">\n        <img src=\"./assets/Logo.png\" alt=\"Logo\">\n        <input v-model=\"searchQuery\" type=\"text\" placeholder=\"Buscar...\">\n        <div class=\"status\">\n          <button class=\"online\">\n            Painéis Online\n            <span class=\"status-count\">{{ onlinePanels }}</span>\n          </button>\n          <button class=\"offline\">\n            Painéis Offlines\n            <span class=\"status-count\">{{ offlinePanels }}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: \"painel-de-monitoramento\",\n  data() {\n    return {\n      panels: [],  // Armazena informações sobre os painéis\n      onlinePanels: 0,\n      offlinePanels: 0,\n      searchQuery: ''\n    };\n  },\n  methods: {\n    async fetchPanelData() {\n      try {\n        const response = await axios.post('http://localhost:5000/check_links', {\n          power_bi_links: [\n            // Aqui estão os links do Power BI que você quer monitorar\n            \"https://observatorio.aeb.gov.br/politica-espacial/instituicoes-do-setor-espacial-brasileiro\",\n            \"https://observatorio.aeb.gov.br/dados-e-indicadores/tema-governo/tema-orcamento/acompanhamento-da-loa-vigente\"\n            // Adicione mais links aqui\n          ]\n        });\n        \n        // Os dados retornados pelo backend\n        const results = response.data;\n        this.panels = results.map(result => ({\n          link: result.link,\n          painel: result.painel,  // Nome do painel que veio do backend\n          status: result.status\n        }));\n        this.updatePanelCounts();  // Atualiza contagem de online/offline\n      } catch (error) {\n        console.error(\"Erro ao buscar dados dos painéis:\", error);\n      }\n    },\n    updatePanelCounts() {\n      this.onlinePanels = this.panels.filter(panel => panel.status === 'ativo').length;\n      this.offlinePanels = this.panels.filter(panel => panel.status !== 'ativo').length;\n    }\n  },\n  mounted() {\n    this.fetchPanelData();  // Chama os dados assim que o componente é montado\n  }\n};\n</script>\n\n<style scoped>\n/* Estilos... (sem alterações nos seus estilos anteriores) */\n</style>\n"]}]}