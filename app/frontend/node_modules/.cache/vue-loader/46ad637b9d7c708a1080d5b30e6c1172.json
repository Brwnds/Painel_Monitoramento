{"remainingRequest":"/home/brenda/Monitoramento_Paineis/app/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/brenda/Monitoramento_Paineis/app/frontend/src/components/LinkChecker.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/brenda/Monitoramento_Paineis/app/frontend/src/components/LinkChecker.vue","mtime":1721398592971},{"path":"/home/brenda/Monitoramento_Paineis/app/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1721311529041},{"path":"/home/brenda/Monitoramento_Paineis/app/frontend/node_modules/babel-loader/lib/index.js","mtime":1721311528997},{"path":"/home/brenda/Monitoramento_Paineis/app/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1721311529041},{"path":"/home/brenda/Monitoramento_Paineis/app/frontend/node_modules/vue-loader/lib/index.js","mtime":1721311530445}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1BhbmVsQ2hlY2tlcicsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBhbmVsU3RhdHVzOiB7fSwKICAgICAgbG9hZGluZzogZmFsc2UKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBjaGVja1BhbmVscygpIHsKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdDo1MDAwL2FwaS9jaGVja19wYW5lbHMnKTsKICAgICAgICB0aGlzLnBhbmVsU3RhdHVzID0gcmVzcG9uc2UuZGF0YTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgfQogICAgfSwKICAgIHN0YXR1c0NsYXNzKHN0YXR1cykgewogICAgICByZXR1cm4gc3RhdHVzID09PSAnYWN0aXZlJyA/ICdhY3RpdmUnIDogJ29mZmxpbmUnOwogICAgfQogIH0KfQo="},{"version":3,"sources":["LinkChecker.vue"],"names":[],"mappings":";AAiBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LinkChecker.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Visualização de Painéis</h1>\n    <button @click=\"checkPanels\" :disabled=\"loading\">\n      <span v-if=\"!loading\">Verificar Painéis</span>\n      <span v-else>Verificando...</span>\n    </button>\n    <ul>\n      <li v-for=\"(status, panel) in panelStatus\" :key=\"panel\" :class=\"statusClass(status)\">\n        <span class=\"panel-name\">{{ panel }}</span>\n        <span class=\"panel-status\">{{ status }}</span>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'PanelChecker',\n  data() {\n    return {\n      panelStatus: {},\n      loading: false\n    };\n  },\n  methods: {\n    async checkPanels() {\n      this.loading = true;\n      try {\n        const response = await axios.get('http://localhost:5000/api/check_panels');\n        this.panelStatus = response.data;\n      } catch (error) {\n        console.error(error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    statusClass(status) {\n      return status === 'active' ? 'active' : 'offline';\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  max-width: 600px;\n  margin: 0 auto;\n  text-align: center;\n  font-family: Arial, sans-serif;\n}\n\nh1 {\n  font-size: 2.5em;\n  margin-bottom: 20px;\n  color: #333;\n}\n\nbutton {\n  margin: 20px;\n  padding: 10px 20px;\n  font-size: 1.2em;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\nbutton:disabled {\n  background-color: #6c757d;\n  cursor: not-allowed;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n  margin-top: 20px;\n}\n\nli {\n  display: flex;\n  justify-content: space-between;\n  padding: 10px;\n  margin: 5px 0;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  transition: background-color 0.3s ease;\n}\n\n.active {\n  background-color: #d4edda;\n  color: #155724;\n}\n\n.offline {\n  background-color: #f8d7da;\n  color: #721c24;\n}\n\n.panel-name {\n  font-weight: bold;\n}\n\n.panel-status {\n  font-style: italic;\n}\n</style>\n"]}]}