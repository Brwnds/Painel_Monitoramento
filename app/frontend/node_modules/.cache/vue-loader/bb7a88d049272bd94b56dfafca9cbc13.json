{"remainingRequest":"C:\\Users\\evelyn.targino\\Documents\\painel_monitoramento\\app\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\evelyn.targino\\Documents\\painel_monitoramento\\app\\frontend\\src\\App.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\evelyn.targino\\Documents\\painel_monitoramento\\app\\frontend\\src\\App.vue","mtime":1727896544078},{"path":"C:\\Users\\evelyn.targino\\Documents\\painel_monitoramento\\app\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1726757148381},{"path":"C:\\Users\\evelyn.targino\\Documents\\painel_monitoramento\\app\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1726757148766},{"path":"C:\\Users\\evelyn.targino\\Documents\\painel_monitoramento\\app\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1726757160104}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogInBhaW5lbC1kZS1tb25pdG9yYW1lbnRvIiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcGFuZWxzOiBbXSwgIC8vIEFybWF6ZW5hIGluZm9ybWHDp8O1ZXMgc29icmUgb3MgcGFpbsOpaXMKICAgICAgb25saW5lUGFuZWxzOiAwLAogICAgICBvZmZsaW5lUGFuZWxzOiAwLAogICAgICBzZWFyY2hRdWVyeTogJycsCiAgICAgIHN0YXR1c0ZpbHRlcjogbnVsbCwgLy8gQXJtYXplbmFyIG8gZmlsdHJvIGRlIHN0YXR1cwogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBmaWx0ZXJlZFBhbmVscygpIHsKICAgICAgcmV0dXJuIHRoaXMucGFuZWxzCiAgICAgICAgLmZpbHRlcihwYW5lbCA9PiBwYW5lbC5uYW1lLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXModGhpcy5zZWFyY2hRdWVyeS50b0xvd2VyQ2FzZSgpKSkKICAgICAgICAuZmlsdGVyKHBhbmVsID0+ICF0aGlzLnN0YXR1c0ZpbHRlciB8fCBwYW5lbC5zdGF0dXMgPT09IHRoaXMuc3RhdHVzRmlsdGVyKTsgLy8gQXBsaWNhciBvIGZpbHRybyBkZSBzdGF0dXMKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGZldGNoUGFuZWxEYXRhKCkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDo1MDAwL2NoZWNrX2xpbmtzJywgewogICAgICAgICAgcG93ZXJfYmlfbGlua3M6IFsKICAgICAgICAgICAgLy8gTGlzdGEgZGUgbGlua3MgZG9zIHBhaW7DqWlzCiAgICAgICAgICBdCiAgICAgICAgfSwgewogICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIAogICAgICAgICAgfQogICAgICAgIH0pOwoKICAgICAgICBjb25zdCByZXN1bHRzID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICB0aGlzLnBhbmVscyA9IHJlc3VsdHMubWFwKHJlc3VsdCA9PiAoewogICAgICAgICAgbGluazogcmVzdWx0LmxpbmssCiAgICAgICAgICBuYW1lOiB0aGlzLmdldFBhbmVsTmFtZShyZXN1bHQubGluayksCiAgICAgICAgICBzdGF0dXM6IHJlc3VsdC5zdGF0dXMKICAgICAgICB9KSk7CiAgICAgICAgdGhpcy51cGRhdGVQYW5lbENvdW50cygpOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoIkVycm8gYW8gYnVzY2FyIGRhZG9zIGRvcyBwYWluw6lpczoiLCBlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgICBnZXRQYW5lbE5hbWUobGluaykgewogICAgICBjb25zdCBwYW5lbE5hbWVzID0gewogICAgICAgICJodHRwczovL29ic2VydmF0b3Jpby5hZWIuZ292LmJyL3BvbGl0aWNhLWVzcGFjaWFsL2luc3RpdHVpY29lcy1kby1zZXRvci1lc3BhY2lhbC1icmFzaWxlaXJvIjogIkluZGljYWRvcmVzIGRvIE9yw6dhbWVudG8iLAogICAgICAgICJodHRwczovL29ic2VydmF0b3Jpby5hZWIuZ292LmJyL2RhZG9zLWUtaW5kaWNhZG9yZXMvdGVtYS1nb3Zlcm5vL3RlbWEtb3JjYW1lbnRvL2Fjb21wYW5oYW1lbnRvLWRhLWxvYS12aWdlbnRlIjogIkFjb21wYW5oYW1lbnRvIE9yw6dhbWVudMOhcmlvIChQTkFFKSIsCiAgICAgICAgLy8gQWRpY2lvbmUgbWFpcyBtYXBlYW1lbnRvcyBkZSBsaW5rIHBhcmEgbm9tZXMgZGUgcGFpbsOpaXMgYXF1aQogICAgICB9OwogICAgICByZXR1cm4gcGFuZWxOYW1lc1tsaW5rXSB8fCAiUGFpbmVsIERlc2NvbmhlY2lkbyI7CiAgICB9LAogICAgdXBkYXRlUGFuZWxDb3VudHMoKSB7CiAgICAgIHRoaXMub25saW5lUGFuZWxzID0gdGhpcy5wYW5lbHMuZmlsdGVyKHBhbmVsID0+IHBhbmVsLnN0YXR1cyA9PT0gJ2FjdGl2ZScpLmxlbmd0aDsKICAgICAgdGhpcy5vZmZsaW5lUGFuZWxzID0gdGhpcy5wYW5lbHMuZmlsdGVyKHBhbmVsID0+IHBhbmVsLnN0YXR1cyA9PT0gJ2luYWN0aXZlJykubGVuZ3RoOwogICAgfSwKICAgIGZpbHRlclN0YXR1cyhzdGF0dXMpIHsKICAgICAgdGhpcy5zdGF0dXNGaWx0ZXIgPSBzdGF0dXM7IC8vIEF0dWFsaXphIG8gZmlsdHJvIGRlIHN0YXR1cwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZmV0Y2hQYW5lbERhdGEoKTsgLy8gQnVzY2EgZGFkb3MgZG9zIHBhaW7DqWlzIHF1YW5kbyBvIGNvbXBvbmVudGUgw6kgbW9udGFkbwogIH0KfTsK"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";AAkCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"panel-monitoring\">\n      <h1>Painel de Monitoramento</h1>\n      <div class=\"grid\">\n        <div v-for=\"panel in filteredPanels\" :key=\"panel.link\" class=\"card\" :class=\"{ offline: panel.status === 'inactive' }\">\n          <div class=\"panel-name\">{{ panel.name }}</div>\n          <div class=\"circle\" :class=\"{ blue: panel.status === 'active', red: panel.status === 'inactive' }\">\n            {{ panel.status === 'active' ? '✔' : '✖' }}\n          </div>\n        </div>\n      </div>\n      <div class=\"sidebar\">\n        <img src=\"./assets/Logo.png\" alt=\"Logo\">\n        <input v-model=\"searchQuery\" type=\"text\" placeholder=\"Buscar...\">\n        <div class=\"status\">\n          <button class=\"online\" @click=\"filterStatus('active')\">\n            Painéis Online\n            <span class=\"status-count\">{{ onlinePanels }}</span>\n          </button>\n          <button class=\"offline\" @click=\"filterStatus('inactive')\">\n            Painéis Offline\n            <span class=\"status-count\">{{ offlinePanels }}</span>\n          </button>\n          <button class=\"check-panels\" @click=\"fetchPanelData\">\n            Verificar Painéis\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: \"painel-de-monitoramento\",\n  data() {\n    return {\n      panels: [],  // Armazena informações sobre os painéis\n      onlinePanels: 0,\n      offlinePanels: 0,\n      searchQuery: '',\n      statusFilter: null, // Armazenar o filtro de status\n    };\n  },\n  computed: {\n    filteredPanels() {\n      return this.panels\n        .filter(panel => panel.name.toLowerCase().includes(this.searchQuery.toLowerCase()))\n        .filter(panel => !this.statusFilter || panel.status === this.statusFilter); // Aplicar o filtro de status\n    }\n  },\n  methods: {\n    async fetchPanelData() {\n      try {\n        const response = await axios.post('http://localhost:5000/check_links', {\n          power_bi_links: [\n            // Lista de links dos painéis\n          ]\n        }, {\n          headers: {\n            'Content-Type': 'application/json' \n          }\n        });\n\n        const results = response.data;\n        this.panels = results.map(result => ({\n          link: result.link,\n          name: this.getPanelName(result.link),\n          status: result.status\n        }));\n        this.updatePanelCounts();\n      } catch (error) {\n        console.error(\"Erro ao buscar dados dos painéis:\", error);\n      }\n    },\n    getPanelName(link) {\n      const panelNames = {\n        \"https://observatorio.aeb.gov.br/politica-espacial/instituicoes-do-setor-espacial-brasileiro\": \"Indicadores do Orçamento\",\n        \"https://observatorio.aeb.gov.br/dados-e-indicadores/tema-governo/tema-orcamento/acompanhamento-da-loa-vigente\": \"Acompanhamento Orçamentário (PNAE)\",\n        // Adicione mais mapeamentos de link para nomes de painéis aqui\n      };\n      return panelNames[link] || \"Painel Desconhecido\";\n    },\n    updatePanelCounts() {\n      this.onlinePanels = this.panels.filter(panel => panel.status === 'active').length;\n      this.offlinePanels = this.panels.filter(panel => panel.status === 'inactive').length;\n    },\n    filterStatus(status) {\n      this.statusFilter = status; // Atualiza o filtro de status\n    }\n  },\n  mounted() {\n    this.fetchPanelData(); // Busca dados dos painéis quando o componente é montado\n  }\n};\n</script>\n\n<style scoped>\n/* Seu estilo aqui */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: Arial, sans-serif;\n  background-color: #1443a0;\n}\n\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100vh;\n  background-color: #021147;\n}\n\n.panel-monitoring {\n  width: 80%;\n  max-width: 1200px;\n  background-color: #fdfdfd;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 20px;\n}\n\nh1 {\n  text-align: center;\n  margin-bottom: 20px;\n  grid-column: span 2;\n  font-size: 28px;\n  font-weight: bold;\n  color: #333;\n  border-bottom: 2px solid #ffea8a;\n  padding-bottom: 10px;\n}\n\n.grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 10px;\n}\n\n.card {\n  padding: 20px;\n  border: 2px solid #ffea8a;\n  border-radius: 8px;\n  text-align: center;\n  background-color: #f9f9f9;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  font-weight: normal;\n  color: #000;\n  min-height: 120px;\n  transition: transform 0.3s, border-color 0.3s, box-shadow 0.3s;\n}\n\n.card:hover {\n  transform: scale(1.03);\n  border-color: #ffda47;\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);\n}\n\n.card.offline {\n  background-color: #ffe5e5;\n  color: #d9534f;\n}\n\n.circle {\n  display: inline-block;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  line-height: 30px;\n  text-align: center;\n  font-size: 16px;\n  font-weight: bold;\n  color: white;\n  margin-top: 10px;\n}\n\n.blue {\n  background-color: #5cb85c;\n}\n\n.red {\n  background-color: #FF0000;\n}\n\n.sidebar {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.sidebar img {\n  max-width: 255px;\n  margin-bottom: 20px;\n}\n\n.sidebar input[type=\"text\"] {\n  padding: 10px;\n  width: 100%;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  margin-bottom: 20px;\n}\n\n.status {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.status button {\n  background-color: #007bff;\n  border: none;\n  color: white;\n  padding: 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  flex: 1;\n  margin: 0 5px;\n  font-size: 14px;\n  position: relative;\n}\n\n.status-count {\n  background-color: #ffffff;\n  border-radius: 12px;\n  padding: 4px 8px;\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  font-size: 12px;\n  color: #007bff;\n}\n\n.status button:hover {\n  background-color: #0056b3;\n}\n\n.check-panels {\n  background-color: #5cb85c;\n}\n\n.check-panels:hover {\n  background-color: #4cae4c;\n}\n</style>\n"]}]}